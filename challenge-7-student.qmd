---
title: "Challenge 7: Incorporating Multiple Inputs"
subtitle: "Functions + Fish"
author: "Tillman Erb"
format: 
  html:  
    embed-resources: true
    code-tools: true
    toc: true
editor: source
code-fold: true
self-contained: true
theme: darkly
execute:
  echo: true
  error: true
  warning: false
---

```{r}
#| label: setup

library(tidyverse)
library(here)

bf_fish <- read_csv(file = here::here("data","BlackfootFish.csv"))
glimpse(bf_fish)
```

## Condition Index

A frequently used measurement for fish health is a condition index [(Wikipedia article)](https://en.wikipedia.org/wiki/Condition_index_in_fish). The following
simple equation can be used to calculate the approximate condition index of a
fish:

$$\text{condition index} = \frac{weight}{length^3} \times 100$$

**1. There are specific units required for the calculation of a condition index -- length must be in centimeters and weight must be in grams. The weight data for the Blackfoot River fish were collected in grams; the length data were collected in millimeters. Transform the length data to the correct units.**

```{r}
#| label: transform-data-to-have-correct-units
bf_fish$length <- bf_fish$length / 10
bf_fish
```

**2. Collecting data of this sort can be very messy! Write a function that will replace unlikely `length` and `weight` measurements with `NA`. Your function should accept at least three inputs:**

+ **a vector of measurements,**
+ **the minimum reasonable value,**
+ **the maximum reasonable value.**

**If a value falls outside these bounds, you should replace it with an `NA`.**

::: callout-tip
If you are struggling with the structure of your function, I would suggest reading the [Mutating Function](https://r4ds.hadley.nz/functions.html#mutate-functions) from R4DS.
:::

```{r}
#| label: function-to-change-impossible-measurements-to-NA
NA_outliers <- function(vec, min_value, max_value) {
  if (!is.numeric(vec[1]) | !is.numeric(min_value) | !is.numeric(max_value)){
    stop("Error: all inputs must be numeric")
  }
  if (max_value <= min_value){
    stop("Error: max_value must be greater than min_value")
  }
  vec <- if_else(vec >= min_value & vec <= max_value,
                 vec,
                 NA)
  return(vec)
}
```

**3. After consulting the [Montana Record Table](https://fwp.mt.gov/fish/anglingData/records) for the four species of trout included in these data, I have conjectured that it is unlikely to have measurements for fish below 5 cm and above 80 cm in length or below 10 g and above 4,000 g in weight. Use your function to modify the `length` and `weight` columns of the `fish` dataset based on my cutoffs.**

```{r}
#| label: modify-impossible-values-of-length-weight
bf_fish <- bf_fish |>
  mutate(length = NA_outliers(length, 
                              min_value = 5, 
                              max_value = 80),
         weight = NA_outliers(weight,
                              min_value = 10,
                              max_value = 4000))

bf_fish
```

**3. Write a function to calculate the condition index of a fish, given inputs of weight and length.**

::: callout-warning
Consider whether you will write a function that works with vectors (accepting
vectors as inputs) or a function that works with data frames (accepting a 
dataset and variable names as inputs)!
:::

```{r}
#| label: condition-function
fish_condition <- function(length_col, weight_col) {
  condition = {{weight_col}} / {{length_col}} ^ 3 * 100
  return(condition)
}
```

**4. Make a thoughtful visualization of how fish conditions have varied over the duration of this study.**

::: callout-warning
### To be thoughtful...

... you need to use at least a third variable!
:::

```{r}
#| label: condition-indices-over-time

bf_fish$condition <- fish_condition(length_col = bf_fish$length,
                                    weight_col = bf_fish$weight)

bf_fish |>
  ggplot(mapping = aes(x = year, y = condition)) +
  geom_point(color = 'steelblue', alpha = 0.4) +
  geom_smooth(method = 'loess', color = 'black') +
  scale_y_continuous(limits = c(0,5)) +
  facet_grid(~ species) +
  labs(x = "Year",
       y = NULL,
       title = "Fish Condition Index by Species and Year",
       subtitle = "Fish Condition Index")
```
